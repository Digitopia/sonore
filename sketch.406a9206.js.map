{"version":3,"sources":["sketch.js"],"names":["s","sketch","NBARS","BAR_WIDTH","BAR_SPACING","BAR_HEIGHT","BARS","Array","fill","COLOR","COLOR_FROM","COLOR_TO","COLOR_LERP","api_url","console","log","socket","io","connect","on","data","info","receivedColor","length","pop","color","window","setup","createCanvas","windowWidth","windowHeight","drawBars","i","drawBar","windowResized","resizeCanvas","idx","barsWidth","offset","x","w","y","val","h","map","y2","push","noStroke","rect","stroke","noFill","draw","lerpColor","myp5","p5"],"mappings":"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","file":"sketch.406a9206.js","sourceRoot":"..","sourcesContent":["const s = sketch => {\n\n  const NBARS = 8;\n  const BAR_WIDTH = 25;\n  const BAR_SPACING = 10;\n  const BAR_HEIGHT = 250;\n\n  let BARS = Array(NBARS).fill(0);\n  let COLOR = '#3463b6'\n  let COLOR_FROM = ''\n  let COLOR_TO = ''\n  let COLOR_LERP = 0 // goes from 0 to 1 (see lerpColor() p5.js for more info)\n\n  const api_url = process.env.SONORE_SERVER_URL;\n  console.log({ api_url });\n\n  // Just check if server is accessible\n  // axios\n  //   .get(api_url)\n  //   .then(res => console.log(res.data))\n  //   .catch(err => console.log(err));\n\n  const socket = io.connect(api_url);\n  console.log('socket', socket)\n  socket.on(\"data\", data => {\n    console.info('got new data', data.data)\n      const receivedColor = data.data.length === 9 ? data.data.pop() : '#cccccc'\n      if (receivedColor !== COLOR_TO) {\n        console.log('new color', receivedColor)\n        COLOR_TO = receivedColor\n        COLOR_FROM = COLOR\n        COLOR_LERP = 0\n        // version where interpolate background\n        // document.querySelector('.p5Canvas').style.background = possibleNewColor\n        // COLOR = possibleNewColor\n      }\n    BARS = data.data\n    console.info('BARS is now', BARS)\n  });\n\n  socket.on(\"color\", data => {\n    console.log('got color', color)\n  });\n\n  window.io = io\n  window.socket = socket\n\n  sketch.setup = () => {\n    console.log(\"running setup\");\n\n    // /<room_number>/<bar_number>/<bar_value>\n    // room_number:\n    // 1 - Sala Suggia\n    // 2 - Sala 2\n    // 3 - Bar Artistas\n    // 4 - Ensaio 1\n    // 5 - Mockup\n    //\n    // bar_number: int [1-8]\n    // bar_value: float [0-1]\n\n    sketch.createCanvas(sketch.windowWidth, sketch.windowHeight);\n    // sketch.background(100, 100, 100);\n    // frameRate(50)\n  }\n\n  // function update() {\n  //   for (let i = 0; i < BARS.length; i++) {\n  //     BARS[i] = map(parseInt(random(0, 24)), 0, 24, 0, 1)\n  //   }\n  // }\n\n  sketch.drawBars = () => {\n    if (!BARS) return;\n    for (let i = 0; i < BARS.length; i++) {\n      sketch.drawBar(i);\n    }\n  }\n\n  sketch.windowResized = () => {\n    console.log('resized!')\n    sketch.resizeCanvas(sketch.windowWidth, sketch.windowHeight);\n  }\n\n  sketch.drawBar = (idx) => {\n\n    const barsWidth = NBARS * BAR_WIDTH + (NBARS-1) * BAR_SPACING\n    const offset = sketch.windowWidth/2 - barsWidth/2\n\n    const x = idx * (BAR_WIDTH + BAR_SPACING) + offset;\n    const w = BAR_WIDTH;\n    const y = sketch.windowHeight/2 - BAR_HEIGHT/2;\n    const val = BARS[idx];\n    const h = sketch.map(val, 0, 1, 0, BAR_HEIGHT);\n    const y2 = y + BAR_HEIGHT - h;\n\n    // first empty rect\n    sketch.push();\n    sketch.fill(255, 30);\n    sketch.noStroke();\n    sketch.rect(x, y, w, BAR_HEIGHT);\n    sketch.pop();\n\n    // fill\n    sketch.push();\n    sketch.fill(COLOR);\n    sketch.noStroke();\n    sketch.rect(x, y2, w, h);\n    sketch.pop();\n    // console.log({val, h})\n\n    // border\n    sketch.push();\n    sketch.stroke(0);\n    sketch.noFill();\n    sketch.rect(x, y, w, BAR_HEIGHT);\n    sketch.pop();\n    // console.log({x, y, w, h: BAR_HEIGHT})\n\n  }\n\n  sketch.draw = () => {\n    // sketch.background(100);\n    // console.log('COLOR is', COLOR)\n    // const c = sketch.color(`#${COLOR}`)\n    // sketch.background(c);\n\n    // update()\n    // interpolate color before drawing\n    if (COLOR_LERP < 1.0) {\n      COLOR = sketch.lerpColor(sketch.color(COLOR_FROM), sketch.color(COLOR_TO), COLOR_LERP)\n      COLOR_LERP += 0.01\n      console.log('lerping', COLOR)\n    }\n    // console.log('not lerping', COLOR)\n\n    sketch.drawBars();\n  }\n\n};\n\nlet myp5 = new p5(s);\n"]}